import { type API } from 'sveltekit-zero-api';
import { getPrimary, getSecondary, getContentPage } from './content';
import { getMarkers } from './marker';
import type { Return, FirstFlatten } from './types';
export type Single = {
    suggestions?: boolean;
    storyboard?: boolean;
    heatmapPath?: boolean;
};
export type Multiple = {
    getPrimary?: Return<typeof getPrimary>;
    getSecondary?: Return<typeof getSecondary>;
    getContentPage?: Return<typeof getContentPage>;
    getMarkers?: Return<typeof getMarkers>;
};
type id = {
    id: string;
};
export type Params = id & Single & FirstFlatten<Multiple>;
type params = (keyof Params)[];
export declare const GET: (event: API<{
    query: id & {
        params: params;
    };
}>) => Promise<{
    Ok: () => {
        body: {
            suggestions: {
                id: string;
                type: string;
                thumbnail: import("../data/types/initial-data").Thumbnail5[];
                title: string;
                channelTitle: string;
                shortBylineText: string;
                length: import("../data/types/initial-data").LengthText;
                isLive: boolean;
            }[] | undefined;
            heatmapPath: string | undefined;
            storyboard: {
                storyboard: {
                    url: string[];
                    parts: {
                        firstPart: string;
                        secondPart: string;
                    };
                    keys: {
                        sgp: string;
                        sigh: string;
                    };
                };
                timeline: {
                    [x: string]: {
                        url: string;
                        x: number;
                        y: number;
                    }[];
                }[] | undefined;
            } | undefined;
            initialData?: import("../data/types/initial-data").InitialData | undefined;
            playerResponse?: import("../data/types/player-response").PlayerResponse | undefined;
            apiToken?: string | undefined;
            context?: import("../data/types/initial-data").Context | undefined;
            transcriptMeta?: {
                key: string;
                params: string;
                visitorData: string;
                sessionId: string;
                clickTrackingParams: string;
            } | undefined;
            auto_chapters?: import("../data/types/initial-data").Chapter[] | undefined;
            chapters?: import("../data/types/initial-data").Chapter[] | undefined;
            heatmap?: import("../data/types/initial-data").HeatmapRenderer | undefined;
            channel?: string | undefined;
            description?: string | undefined;
            title?: string | undefined;
            isLive?: boolean | undefined;
        };
        status: 200;
        ok: true;
    };
} | {
    Success: () => {
        body: {
            suggestions: {
                id: string;
                type: string;
                thumbnail: import("../data/types/initial-data").Thumbnail5[];
                title: string;
                channelTitle: string;
                shortBylineText: string;
                length: import("../data/types/initial-data").LengthText;
                isLive: boolean;
            }[] | undefined;
            heatmapPath: string | undefined;
            storyboard: {
                storyboard: {
                    url: string[];
                    parts: {
                        firstPart: string;
                        secondPart: string;
                    };
                    keys: {
                        sgp: string;
                        sigh: string;
                    };
                };
                timeline: {
                    [x: string]: {
                        url: string;
                        x: number;
                        y: number;
                    }[];
                }[] | undefined;
            } | undefined;
            initialData?: import("../data/types/initial-data").InitialData | undefined;
            playerResponse?: import("../data/types/player-response").PlayerResponse | undefined;
            apiToken?: string | undefined;
            context?: import("../data/types/initial-data").Context | undefined;
            transcriptMeta?: {
                key: string;
                params: string;
                visitorData: string;
                sessionId: string;
                clickTrackingParams: string;
            } | undefined;
            auto_chapters?: import("../data/types/initial-data").Chapter[] | undefined;
            chapters?: import("../data/types/initial-data").Chapter[] | undefined;
            heatmap?: import("../data/types/initial-data").HeatmapRenderer | undefined;
            channel?: string | undefined;
            description?: string | undefined;
            title?: string | undefined;
            isLive?: boolean | undefined;
        };
        status: 200;
        ok: true;
    };
    Any: () => {
        body: {
            suggestions: {
                id: string;
                type: string;
                thumbnail: import("../data/types/initial-data").Thumbnail5[];
                title: string;
                channelTitle: string;
                shortBylineText: string;
                length: import("../data/types/initial-data").LengthText;
                isLive: boolean;
            }[] | undefined;
            heatmapPath: string | undefined;
            storyboard: {
                storyboard: {
                    url: string[];
                    parts: {
                        firstPart: string;
                        secondPart: string;
                    };
                    keys: {
                        sgp: string;
                        sigh: string;
                    };
                };
                timeline: {
                    [x: string]: {
                        url: string;
                        x: number;
                        y: number;
                    }[];
                }[] | undefined;
            } | undefined;
            initialData?: import("../data/types/initial-data").InitialData | undefined;
            playerResponse?: import("../data/types/player-response").PlayerResponse | undefined;
            apiToken?: string | undefined;
            context?: import("../data/types/initial-data").Context | undefined;
            transcriptMeta?: {
                key: string;
                params: string;
                visitorData: string;
                sessionId: string;
                clickTrackingParams: string;
            } | undefined;
            auto_chapters?: import("../data/types/initial-data").Chapter[] | undefined;
            chapters?: import("../data/types/initial-data").Chapter[] | undefined;
            heatmap?: import("../data/types/initial-data").HeatmapRenderer | undefined;
            channel?: string | undefined;
            description?: string | undefined;
            title?: string | undefined;
            isLive?: boolean | undefined;
        };
        status: 200;
        ok: true;
    };
}>;
export {};
